


int orig = 0x0dbc;
int insert = 0xdf00;
int a = orig | (insert << 6);
printf("%d\n", a);





int orig = 0xc0a0;
int insert = 0x00de;
int a = orig | (insert << 6);
printf("%d\n", a);





int orig = 0xfc0e;
int insert = 0xe00d;
int a = orig | (insert << 7);
int b = orig | (insert << 6);
int result = a | b;
printf("%d\n", result);





int orig = 0x0aa0;
int insert = 0xdad0;
int a = orig | (insert << 6);
int b = orig | (insert << 7);
int result = a & b;
printf("%d\n", result);





int orig = 0xf0c0;
int insert = 0xe0de;
int a = orig | (insert << 7);
int b = orig | (insert << 7);
int result = a ^ b;
printf("%d\n", result);





int i = 0x0d0d;
int left = 0x0d0d ^ (1 << 9);
printf("%d\n", left);





long value1 = 0xffbacb0f;
long value2 = 0xd0aabf0f;
long result = (value1 << 3) ^ (value2 >> 3);
printf("%ld\n", result);





int value1 = 427;
int value2 = 147;
int result = (value1 << 4) ^ (value2 >> 4);
printf("%d\n", result);





long testValue = 0xeac0c0cd;
int a = 0;
if(testValue ^ (1 << 4)){
a = 1;
}else{
a = 2;
}
printf("%d\n", a);





long testValue = 0xfd0ad0ca;
int a = 0;
if(testValue & (1 << 3)){
a = 1;
}else{
a = 2;
}
printf("%d\n", a);





int value1 = 279;
int value2 = 493;
int result = (value1 << 4) & (value2 >> 4);
printf("%d\n", result);





int value1 = 331;
int value2 = 302;
int result = (value1 << 3) & (value2 >> 3);
printf("%d\n", result);


