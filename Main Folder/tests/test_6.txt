int orig = 0x62f2;
int insert = 0x777c;
int a = orig | (insert << 6);


int orig = 0x9951;
int insert = 0x36bf;
int a = orig | (insert << 6);


int orig = 0xcdde;
int insert = 0x645f;
int a = orig | (insert << 6);
int b = orig | (insert << 6);
int result = a ^ b;


int orig = 0x330f;
int insert = 0xf07d;
int a = orig | (insert << 6);
int b = orig | (insert << 7);
int result = a & b;


int orig = 0xaf5a;
int insert = 0x817d;
int a = orig | (insert << 7);
int b = orig | (insert << 6);
int result = a & b;


int i = 0x91d5;
int left = 0x91d5 & (1 << 1);


long value1 = 0xbafa6e0f;
long value2 = 0x2eca7732;
long result = (value1 << 4) & (value2 >> 4);


int value1 = 481;
int value2 = 428;
int result = (value1 << 4) ^ (value2 >> 4);


long testValue = 0xd8501520;
int a = 0;
if(testValue & (1 << 2)){
a = 1;
}else{
a = 2;
}


long testValue = 0x962d58f9;
int a = 0;
int result = 0;
if((result = testValue & testValue ^ testValue | (1 << 2))){
a = 1;
}else{
a = 2;
}


int value1 = 336;
int value2 = 426;
int result = (value1 << 2) | (value2 >> 2);


int value1 = 497;
int value2 = 244;
int result = (value1 << 3) ^ (value2 >> 3);


