int orig = 0x230b;
int insert = 0xce7e;
int a = orig | (insert << 6);


int orig = 0x5394;
int insert = 0x0bc1;
int a = orig | (insert << 7);


int orig = 0xcd57;
int insert = 0x4166;
int a = orig | (insert << 6);
int b = orig | (insert << 6);
int result = a & b;


int orig = 0x77bc;
int insert = 0x85bc;
int a = orig | (insert << 7);
int b = orig | (insert << 7);
int result = a ^ b;


int orig = 0xf4e9;
int insert = 0x668b;
int a = orig | (insert << 6);
int b = orig | (insert << 7);
int result = a | b;


int i = 0x0656;
int left = 0x0656 ^ (1 << 0);


long value1 = 0xf681be5a;
long value2 = 0x2639921d;
long result = (value1 << 4) ^ (value2 >> 4);


int value1 = 159;
int value2 = 219;
int result = (value1 << 4) & (value2 >> 4);


long testValue = 0x8eeea0aa;
int a = 0;
if(testValue & (1 << 4)){
a = 1;
}else{
a = 2;
}


long testValue = 0x5fe81747;
int a = 0;
int result = 0;
if((result = testValue & testValue ^ testValue | (1 << 4))){
a = 1;
}else{
a = 2;
}


int value1 = 318;
int value2 = 395;
int result = (value1 << 4) & (value2 >> 4);


int value1 = 257;
int value2 = 416;
int result = (value1 << 2) ^ (value2 >> 2);


