int orig = 0xB0BB;
int insert = 0xB00B;
int a = orig | (insert << 6);


int orig = 0xF0F0;
int insert = 0xDD00;
int a = orig | (insert << 6);


int orig = 0x00DD;
int insert = 0xBBB0;
int a = orig | (insert << 6);
int b = orig | (insert << 7);
int result = a & b;


int orig = 0xB00B;
int insert = 0x00BB;
int a = orig | (insert << 7);
int b = orig | (insert << 6);
int result = a & b;


int orig = 0x00BB;
int insert = 0x0B0B;
int a = orig | (insert << 7);
int b = orig | (insert << 6);
int result = a ^ b;


int i = 0x0BBB;
int left = 0x0BBB ^ (1 << 2);


long value1 = 0xD0DDDD0D;
long value2 = 0xFFFFF00F;
long result = (value1 << 4) | (value2 >> 2);


int value1 = 412;
int value2 = 293;
int result = (value1 << 2) ^ (value2 >> 2);


long testValue = 0xD00DDDDD;
int a = 0;
if(testValue ^ (1 << 4)){
a = 1;
}else{
a = 2;
}


long testValue = 0xF0FFFFF0;
int a = 0;
int result = 0;
if((result = testValue & testValue ^ testValue | (1 << 2))){
a = 1;
}else{
a = 2;
}


int value1 = 353;
int value2 = 195;
int result = (value1 << 4) & (value2 >> 4);


int value1 = 212;
int value2 = 258;
int result = (value1 << 3) | (value2 >> 3);


