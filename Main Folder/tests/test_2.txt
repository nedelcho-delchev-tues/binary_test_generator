int orig = 0xd743;
int insert = 0x6f95;
int a = orig | (insert << 7);


int orig = 0x8a4d;
int insert = 0x0f60;
int a = orig | (insert << 7);


int orig = 0xefdf;
int insert = 0x54a0;
int a = orig | (insert << 7);
int b = orig | (insert << 6);
int result = a & b;


int orig = 0x8b16;
int insert = 0x7acb;
int a = orig | (insert << 7);
int b = orig | (insert << 7);
int result = a & b;


int orig = 0x2d55;
int insert = 0x622d;
int a = orig | (insert << 7);
int b = orig | (insert << 6);
int result = a | b;


int i = 0xf70e;
int left = 0xf70e | (1 << 9);


long value1 = 0xe4a8233a;
long value2 = 0x0b126c9d;
long result = (value1 << 2) ^ (value2 >> 3);


int value1 = 508;
int value2 = 292;
int result = (value1 << 2) & (value2 >> 2);


long testValue = 0x6dfc36ee;
int a = 0;
if(testValue ^ (1 << 3)){
a = 1;
}else{
a = 2;
}


long testValue = 0x2867f595;
int a = 0;
int result = 0;
if((result = testValue & testValue ^ testValue | (1 << 2))){
a = 1;
}else{
a = 2;
}


int value1 = 381;
int value2 = 331;
int result = (value1 << 4) ^ (value2 >> 4);


int value1 = 340;
int value2 = 360;
int result = (value1 << 3) & (value2 >> 3);


