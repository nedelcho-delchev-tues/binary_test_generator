int orig = 0x694f;
int insert = 0x1908;
int a = orig | (insert << 6);


int orig = 0xed2b;
int insert = 0x30ea;
int a = orig | (insert << 6);


int orig = 0x78c8;
int insert = 0x827f;
int a = orig | (insert << 6);
int b = orig | (insert << 6);
int result = a ^ b;


int orig = 0x2a1f;
int insert = 0x0413;
int a = orig | (insert << 6);
int b = orig | (insert << 7);
int result = a & b;


int orig = 0x5c54;
int insert = 0x2073;
int a = orig | (insert << 7);
int b = orig | (insert << 7);
int result = a & b;


int i = 0x6214;
int left = 0x6214 | (1 << 4);


long value1 = 0x2278c49a;
long value2 = 0xfae36a67;
long result = (value1 << 3) & (value2 >> 3);


int value1 = 358;
int value2 = 382;
int result = (value1 << 2) ^ (value2 >> 2);


long testValue = 0xce441dc3;
int a = 0;
if(testValue | (1 << 3)){
a = 1;
}else{
a = 2;
}


long testValue = 0x3bbe3a1a;
int a = 0;
int result = 0;
if((result = testValue & testValue ^ testValue | (1 << 3))){
a = 1;
}else{
a = 2;
}


int value1 = 146;
int value2 = 161;
int result = (value1 << 2) & (value2 >> 2);


int value1 = 455;
int value2 = 254;
int result = (value1 << 2) & (value2 >> 2);


